{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "x=0\n",
    "y=1\n",
    "z=0\n",
    "print(z)\n",
    "for i in range(0,10):\n",
    "    z = x + y\n",
    "    x=y\n",
    "    y = z\n",
    "    print(x)\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "18\n",
      "16\n",
      "14\n",
      "12\n",
      "10\n",
      "8\n",
      "6\n",
      "4\n",
      "2\n",
      "0\n",
      "Done for the Day\n"
     ]
    }
   ],
   "source": [
    "class Node:\n",
    "    def __init__(self,data):\n",
    "        self.val = data\n",
    "        self.next = None\n",
    "class LinkedList:\n",
    "    def __init__(self,head):\n",
    "        self.head = head\n",
    "L1 = LinkedList(None)\n",
    "head = L1\n",
    "#print(L1,LinkedList(None))\n",
    "#print(None == None)\n",
    "i=0\n",
    "if L1.head == None:\n",
    "        temp_node = Node(i*2)\n",
    "        L1.head = temp_node\n",
    "#print(L1.head)\n",
    "\n",
    "while i in range(0,10):    \n",
    "    temp_node = Node(i*2)\n",
    "    temp_node.next = L1\n",
    "    L1 = temp_node\n",
    "    i = i +1\n",
    "while L1 != head:\n",
    "    print(L1.val)\n",
    "    L1 = L1.next\n",
    "    \n",
    "print(\"Done for the Day\")\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "class Tree:\n",
    "    def __init__(self,val):\n",
    "        left = None\n",
    "        right = None\n",
    "        val = val\n",
    "    def insert\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.7.3"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
